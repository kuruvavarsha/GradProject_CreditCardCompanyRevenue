---
title: "Model CPI - For Revenue- CFF1"
author: "UC Team"
format: html
editor: visual
---

```{r}
#| include: false

knitr::opts_chunk$set(
  fig.align = "center"
)

library(tidyverse)
library(lmtest)
library(tseries)
library(data.table)
library(dplyr)
library(tidyverse)
library(rmarkdown)
library(gapminder)
library(janitor)
library(lubridate)
library(scales)
library(gt)
library(patchwork)
library(kableExtra)
library(data.table)
library(corrplot)
library(zoo)
library(forecast)
library(fable)
library(feasts)
library(tsibble)
library(tseries)
library(ggplot2)
library(psych)
library(zoo)
library(gridExtra)
library(lmtest)
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

CFF_1 <- fread("C:\\Users\\varsh\\OneDrive\\Documents\\Graduate Case Studies\\Data\\CFF_new.csv", header = T)
#head(CFF_1)
# Aggregating CFF_1 on month level (Difference of Actuals & Predicted)
CFF_1_agg <- CFF_1 %>% group_by(`Model Date ID`, `Month Number`, `Transaction Type`) %>% summarize(Amount = sum(Amount))
CFF_1_agg_wider <- CFF_1_agg %>%
  pivot_wider(names_from = `Transaction Type`,values_from = Amount) %>%
  mutate(TotalRevenue= A)

CFF_1_agg_revenue <- CFF_1_agg_wider[,c(2,5)]

CFF_1_agg_revenue<-as.data.frame(CFF_1_agg_revenue)
base_date <- as.Date("2007-10-01")
Date <- base_date+ months(CFF_1_agg_revenue$`Month Number`-1)
CFF_1_agg_revenue <- data.frame(Date = Date,Revenue=CFF_1_agg_revenue$TotalRevenue)
CFF_1_agg_revenue
library("writexl")
CPI<-fread("C:\\Users\\varsh\\OneDrive\\Documents\\Graduate Case Studies\\Data\\CPI.csv", header = T)
  CPI <- CPI %>%
    mutate(DATE=as.Date(as.character(DATE))) 
  colnames(CPI) <- c('Date','CPI')
#Appending CPI data to Aggregated CFF_1 
CFF_1_Revenue_CPI<-merge(CFF_1_agg_revenue,CPI,by="Date")
#write.csv(CFF_1_Revenue_CPI,"CFF_1_Revenue_CPI.csv")
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

# Reading data
data <- fread("CFF_1_Revenue_CPI.csv", header = T, fill = TRUE)
#head(data)
summary(data)

data$V1 <- NULL
# Rename columns
colnames(data) <- c("time", "Revenue", "CPI")
#head(data)

datanew <- data %>%
   mutate(time = yearmonth(time))

#head(datanew)
```

## Time Series plot of Revenue of actuals and projections - Variable Y

The Revenue plot has a lot of fluctuations in the time series plot with a peak right before the start of the year 2012 and mostly follows an exponentially decreasing trend.

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#Time series plot for Revenue
datanew %>%
    ggplot() +
    geom_line(aes(time,Revenue)) +
    theme_bw() +
    ggtitle("Time series plot of Revenue") +
    xlab("time") +
    ylab("Revenue")

```

***The data is not stationery - does not pass the stationairty tests .***

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
# Calculate summary statistics
#head(datanew)

# ADF Test for y1
invisible(adf.test(datanew$Revenue))
#Non stationery because p value is greater than 0.05
# KPSS Test for y1
invisible(kpss.test(datanew$Revenue))
#Non stationery because p values <<0.05
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
#Checking for mean stationarity for Revenue column 
data_roll <- datanew %>%
  mutate(
    close_mean = zoo::rollmean(
      Revenue, 
      k = 12, 
      fill = NA),
    close_sd = zoo::rollapply(
      Revenue,  
      FUN = sd, 
      width = 12, 
      fill = NA)
  )

data_rollmean <- data_roll %>%
  ggplot() +
  geom_line(aes(time, Revenue)) +
  geom_line(aes(time, close_mean),color='blue') +
  theme_bw() +
  ggtitle("Mean of Difference  over time") +
  ylab("Revenue of  actuals ") +
  xlab("Time")

```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_roll <- datanew %>%
  mutate(
    close_mean = zoo::rollmean(
      Revenue, 
      k = 12, 
      fill = NA),
    close_sd = zoo::rollapply(
      Revenue, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )
data_rollsd <- data_roll %>%
  ggplot() +
  geom_line(aes(time, close_sd)) +
  geom_smooth(aes(time,close_sd),method='lm',se=F)+
  theme_bw() +
  ggtitle("Rolling SD Revenue of actuals and predicted") +
  ylab("Revenue of actuals and predicted") +
  xlab("Year")



```

#### [*wt=log(yt)*]{.underline}

```{r}
#| echo: true
#| code-fold: true
#| warning: false
data_trans <- datanew %>%
  mutate(data_log = log1p(Revenue)) 
  

#data_trans %>%
  #ggplot() +
  #geom_line(aes(time, data_log)) +
  #geom_line(aes(time, data_boxcox),color='blue') +
  #theme_bw() +
  #ggtitle("Transformed Revenue data") +
  #ylab("Revenue data transformed") +
  #xlab("Year")
```

***wd=log(y¬≠~t~)-log(y~t-1~)***

```{r}
#| echo: true
#| code-fold: true
#| warning: false
data_trans = datanew %>%
  mutate(data_log = log1p(Revenue),
  value_log_diff = data_log - lag(data_log))

data_trans %>%
  ggplot() +
  geom_line(aes(time, value_log_diff),color = 'blue') +
  theme_bw() +
  ggtitle("Transformed and differenced Revenue data") +
  ylab("Revenue data transformed and differenced") +
  xlab("Year")
```

***Variable y is now "stationary"***.

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

invisible(adf.test(na.omit(data_trans$value_log_diff)))
```

## 

## Time Series plot of Variable X : CPI

CPI follows an increasing curve after the dip in 2009.

```{r}
#| echo: true
#| code-fold: true
#| warning: false


#Time series plot for CPI
datanew %>%
    ggplot() +
    geom_line(aes(time,CPI)) +
    theme_bw() +
    ggtitle("Time series plot of CPI") +
    xlab("time") +
    ylab(" Consumer Price Index")
```

***Variable X is "non-stationary".***

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

# ADF Test for y2
adf.test(datanew$CPI)
#Non stationery because p value is wayy greater than 0.05

# KPSS Test for y2
kpss.test(datanew$CPI)
#Non stationery because p values <<0.05
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
#Checking for mean stationarity for CPI 
data_roll <- datanew %>%
  mutate(
    close_mean_CPI = zoo::rollmean(
      CPI, 
      k = 12, 
      fill = NA),
    close_sd_CPI = zoo::rollapply(
      CPI, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )

data_rollmean_CPI <- data_roll %>%
  ggplot() +
  geom_line(aes(time, CPI)) +
  geom_line(aes(time, close_mean_CPI),color='blue') +
  theme_bw() +
  ggtitle("Mean of CPI  over time") +
  ylab("CPI") +
  xlab("Time")
#data_rollmean_CPI

```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_roll <- datanew %>%
  mutate(
    close_mean_CPI = zoo::rollmean(
      CPI, 
      k = 12, 
      fill = NA),
    close_sd_CPI = zoo::rollapply(
      CPI, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )
data_rollsd <- data_roll %>%
  ggplot() +
  geom_line(aes(time, close_sd_CPI)) +
  geom_smooth(aes(time,close_sd_CPI),method='lm',se=F)+
  theme_bw() +
  ggtitle("Rolling SD of Mortgage Rate") +
  ylab("Mortgage Rate") +
  xlab("Year")

#data_rollsd
```

#### [*wt=log(xt)*]{.underline}

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_trans_2 <- datanew %>%
  mutate(data_log_CPI = log1p(CPI)) 
  #mutate(data_boxcox_unemp = forecast::BoxCox(ratio, lambda = "auto"))
  

data_trans_2 %>%
  ggplot() +
  geom_line(aes(time, data_log_CPI)) +
  #geom_line(aes(time, data_boxcox_unemp),color='blue') +
  theme_bw() +
  ggtitle("Transformed CPI data") +
  ylab("CPI data transformed") +
  xlab("Year")
```

***wd=log(xt)-log(xt-1)***

```{r}
#| echo: true
#| code-fold: true
#| warning: false

data_trans_2 = data_trans_2 %>%
  mutate(data_log_CPI = log1p(CPI),
  value_log_diff_CPI = data_log_CPI - lag(data_log_CPI))

data_trans_2 %>%
  ggplot() +
  geom_line(aes(time, value_log_diff_CPI),color = 'blue') +
  theme_bw() +
  ggtitle("Transformed and differenced CPI") +
  ylab("CPI data transformed and differenced") +
  xlab("Year")
```

***Variable x is now "stationary"***.

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

adf.test(na.omit(data_trans_2$value_log_diff_CPI))
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_final <- merge(data_trans, data_trans_2, by.x = 'time', by.y = 'time')
#head(data_final)
data_final$Revenue.y <- NULL
data_final$CPI.y <- NULL
#data_final$data_log.y <- NULL
#data_final$value_log_diff.y <- NULL
#head(data_final)
colnames(data_final) <- c("time", "revenue", "CPI", "value_log","value_log_diff", "value_log_CPI", "value_log_diff_CPI")
#head(data_final)
```

### Granger Causality, Model Summary and Inferences :

Purchase Index: xt <br>Revenue: yt <br>*Since both these series are nonstationary we have transformed them first before the Granger Causality test.* <br> Œîxt = log(xt) ‚àí log (xt-1) <br> Œîyt = log(ùë¶t) ‚àí log (ùë¶t-1) <br> xh = Œîxt <br> yh = Œîyt <br>

```{r}
#| echo: true
#| code-fold: true
#| warning: false

#Granger causality test
#grangertest(value_log_diff ~ value_log_diff_PIndex, order = 4, data = data_final)

#Dynamic regression
yh <- embed(data_final$value_log_diff,4)
xh <- embed(data_final$value_log_diff_CPI,4)
mh <- lm(yh[,1] ~ yh[,2:4] + xh)
summary(mh)

#ANOVA
mh2 <- lm(yh[,1] ~ yh[,2:4])
anova(mh, mh2)
```

***Therefore, we can conclude that*** because of the high p-value of the Anova test between model 1 and 2, we can conclude that CPI does not Granger-cause Revenue.

```{r}
#| echo: true
#| code-fold: true
#| warning: false
effect1 = (3.54383*(log(92.5) -( log(91.5)))+(3.25517*(log(91.5)-log(90.5)))+(2.64150*(log(90.5)-log(89.5)))+(-0.88089 *(log(89.5)-log(88.5))))
sigma1 <- summary(mh)$sigma
C = exp(0.5 * sigma1^2)
effect = C*exp(effect1)
effect1
```
