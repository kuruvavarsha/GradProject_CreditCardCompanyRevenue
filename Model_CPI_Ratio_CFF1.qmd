---
title: "Model CPI - Ratio -CFF1"
author: "Varsha Kuruva"
format: 
  html:
    code-fold: true
    embed-resources: true
knitr:
 opts_chunk:
  echo: TRUE
  code-fold: TRUE
  warning: FALSE
  message: FALSE
editor: visual
---

```{r}
#| include: false

knitr::opts_chunk$set(
  fig.align = "center"
)

library(tidyverse)
library(lmtest)
library(tseries)
library(data.table)
library(dplyr)
library(tidyverse)
library(rmarkdown)
library(gapminder)
library(janitor)
library(lubridate)
library(scales)
library(gt)
library(patchwork)
library(kableExtra)
library(data.table)
library(corrplot)
library(zoo)
library(forecast)
library(fable)
library(feasts)
library(tsibble)
library(tseries)
library(ggplot2)
library(psych)
library(zoo)
library(gridExtra)
library(lmtest)
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false




CFF_1 <- fread("C:\\Users\\varsh\\OneDrive\\Documents\\Graduate Case Studies\\Data\\CFF_new.csv", header = T)
#model_dates<-read.csv("Data/Model Dates.csv")
# Aggregating CFF_1 on month level (Difference of Actuals & Predicted)
CFF_1_agg <- CFF_1 %>% group_by(`Model Date ID`, `Month Number`, `Transaction Type`) %>% summarize(Amount = sum(Amount))
CFF_1_agg_wider <- CFF_1_agg %>%
  pivot_wider(names_from = `Transaction Type`,values_from = Amount) %>%
  mutate(Totalratio= A/P)

CFF_1_agg_ratio <- CFF_1_agg_wider[,c(2,5)]

CFF_1_agg_ratio<-as.data.frame(CFF_1_agg_ratio)
base_date <- as.Date("2007-10-01")
Date <- base_date+ months(CFF_1_agg_ratio$`Month Number`-1)
CFF_1_agg_ratio <- data.frame(Date = Date,ratio=CFF_1_agg_ratio$Totalratio)
CFF_1_agg_ratio
# CFF_1_agg_ratio Final file for CFF_1 monthly aggregated data national level 


library("writexl")
#write.csv(CFF_1_agg_ratio,"CFF_1_agg_ratio.csv")

  # Unemloyement Rate
  

  CPI<-fread("C:\\Users\\varsh\\OneDrive\\Documents\\Graduate Case Studies\\Data\\CPI.csv", header = T)
  CPI <- CPI %>%
    mutate(DATE=as.Date(as.character(DATE))) 
  colnames(CPI) <- c('Date','CPI')
  
  #Appending unemployment rate to CFF_1 ratio file
  CFF_1_Ratio_CPI<-merge(CFF_1_agg_ratio,CPI, by ="Date")
  CFF_1_Ratio_CPI
  #write.csv(CFF_1_Ratio_CPI,"CFF_1_Ratio_CPI.csv")

```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false


# Reading data
data <- fread("CFF_1_Ratio_CPI.csv", header = T, fill = TRUE)
#head(data)
summary(data)

data$V1 <- NULL
# Rename columns
colnames(data) <- c("time", "ratio", "CPI")
#head(data)

datanew <- data %>%
   mutate(time = yearmonth(time))

head(datanew)
```

## Time Series plot of Ratio of actuals and projections - Variable Y

The ratio plot has a lot of fluctuations in the time series plot with a peak right before the start of the year 2012.

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#Time series plot for ratio
datanew %>%
    ggplot() +
    geom_line(aes(time,ratio)) +
    theme_bw() +
    ggtitle("Time series plot of ratio") +
    xlab("time") +
    ylab("ratio")
```

***The data is stationery.***

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
# Calculate summary statistics
#head(datanew)

# ADF Test for y1
adf.test(datanew$ratio)
#Non stationery because p value is wayy greater than 0.05
# KPSS Test for y1
kpss.test(datanew$ratio)
#Non stationery because p values <<0.05
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
#Checking for mean stationarity for Ratio column 
data_roll <- datanew %>%
  mutate(
    close_mean = zoo::rollmean(
      ratio, 
      k = 12, 
      fill = NA),
    close_sd = zoo::rollapply(
      ratio, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )

data_rollmean <- data_roll %>%
  ggplot() +
  geom_line(aes(time, ratio)) +
  geom_line(aes(time, close_mean),color='blue') +
  theme_bw() +
  ggtitle("Mean of Difference  over time") +
  ylab("Ratio of  actuals and projected values") +
  xlab("Time")
data_rollmean
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_roll <- datanew %>%
  mutate(
    close_mean = zoo::rollmean(
      ratio, 
      k = 12, 
      fill = NA),
    close_sd = zoo::rollapply(
      ratio, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )
data_rollsd <- data_roll %>%
  ggplot() +
  geom_line(aes(time, close_sd)) +
  geom_smooth(aes(time,close_sd),method='lm',se=F)+
  theme_bw() +
  ggtitle("Rolling SD Ratio of actuals and predicted") +
  ylab("Ratio of actuals and predicted") +
  xlab("Year")

data_rollsd

```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

data_trans <- datanew %>%
  mutate(data_log = log1p(ratio)) 
  

data_trans %>%
  ggplot() +
  geom_line(aes(time, data_log)) +
  #geom_line(aes(time, data_boxcox),color='blue') +
  theme_bw() +
  ggtitle("Transformed ratio data") +
  ylab("Ratio data transformed") +
  xlab("Year")
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_trans = datanew %>%
  mutate(data_log = log1p(ratio),
  value_log_diff = data_log - lag(data_log))

data_trans %>%
  ggplot() +
  geom_line(aes(time, value_log_diff),color = 'blue') +
  theme_bw() +
  ggtitle("Transformed and differenced ratio data") +
  ylab("Ratio data transformed and differenced") +
  xlab("Year")
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

adf.test(na.omit(data_trans$value_log_diff))
```

## Time Series plot of Variable X : Consumer Price Index

Unemployment rate follows an increasing curve after the dip in 2009.

```{r}
#| echo: true
#| code-fold: true
#| warning: false


#Time series plot for CPI
datanew %>%
    ggplot() +
    geom_line(aes(time,CPI)) +
    theme_bw() +
    ggtitle("Time series plot of CPI") +
    xlab("time") +
    ylab(" Consumer Price Index")
```

### Stationarity Test for Variable X :

***Variable X is "non-stationary".***

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false


# ADF Test for y2
adf.test(datanew$CPI)
#Non stationery because p value is wayy greater than 0.05

# KPSS Test for y2
kpss.test(datanew$CPI)
#Non stationery because p values <<0.05
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
#Checking for mean stationarity for CPI 
data_roll <- datanew %>%
  mutate(
    close_mean_CPI = zoo::rollmean(
      CPI, 
      k = 12, 
      fill = NA),
    close_sd_CPI = zoo::rollapply(
      CPI, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )

data_rollmean_CPI <- data_roll %>%
  ggplot() +
  geom_line(aes(time, CPI)) +
  geom_line(aes(time, close_mean_CPI),color='blue') +
  theme_bw() +
  ggtitle("Mean of CPI  over time") +
  ylab("CPI") +
  xlab("Time")
data_rollmean_CPI
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_roll <- datanew %>%
  mutate(
    close_mean_CPI = zoo::rollmean(
      CPI, 
      k = 12, 
      fill = NA),
    close_sd_CPI = zoo::rollapply(
      CPI, 
      FUN = sd, 
      width = 12, 
      fill = NA)
  )
data_rollsd <- data_roll %>%
  ggplot() +
  geom_line(aes(time, close_sd_CPI)) +
  geom_smooth(aes(time,close_sd_CPI),method='lm',se=F)+
  theme_bw() +
  ggtitle("Rolling SD of Mortgage Rate") +
  ylab("Mortgage Rate") +
  xlab("Year")

data_rollsd
```

#### [*wt=log(xt)*]{.underline}

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_trans_2 <- datanew %>%
  mutate(data_log_CPI = log1p(CPI)) 
  #mutate(data_boxcox_unemp = forecast::BoxCox(ratio, lambda = "auto"))
  

data_trans_2 %>%
  ggplot() +
  geom_line(aes(time, data_log_CPI)) +
  #geom_line(aes(time, data_boxcox_unemp),color='blue') +
  theme_bw() +
  ggtitle("Transformed mortgage rate data") +
  ylab("Mortgage data transformed") +
  xlab("Year")
```

***wd=log(xt)-log(xt-1)***

```{r}
#| echo: true
#| code-fold: true
#| warning: false
data_trans_2 = data_trans_2 %>%
  mutate(data_log_CPI = log1p(CPI),
  value_log_diff_CPI = data_log_CPI - lag(data_log_CPI))

data_trans_2 %>%
  ggplot() +
  geom_line(aes(time, value_log_diff_CPI),color = 'blue') +
  theme_bw() +
  ggtitle("Transformed and differenced mortgage Rate") +
  ylab("Mortgage data transformed and differenced") +
  xlab("Year")
```

***Variable x is now "stationary"***.

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false

adf.test(na.omit(data_trans_2$value_log_diff_CPI))
```

```{r}
#| echo: true
#| code-fold: true
#| warning: false
#| include: false
data_final <- merge(data_trans, data_trans_2, by.x = 'time', by.y = 'time')
#head(data_final)
data_final$ratio.y <- NULL
data_final$CPI.y <- NULL
#data_final$data_log.y <- NULL
#data_final$value_log_diff.y <- NULL
#head(data_final)
colnames(data_final) <- c("time", "ratio", "Unemp", "value_log","value_log_diff", "value_log_CPI", "value_log_diff_CPI")
data_final[1, "ratio"] <- NA
#head(data_final)
```

### Granger Causality, Model Summary and Inferences :

CPI: xt <br>Revenue: yt <br>*Since both these series are nonstationary we have transformed them first before the Granger Causality test.* <br> Œîxt = log(xt) ‚àí log (xt-1) <br> Œîyt = log(ùë¶t) ‚àí log (ùë¶t-1) <br> xh = Œîxt <br> yh = Œîyt <br>

***For 4 lags :***

```{r}
#| echo: true
#| code-fold: true
#| warning: false

#Granger causality test
#grangertest(value_log_diff ~ value_log_diff_CPI, order = 3, data = data_final)

#Dynamic regression
yh <- embed(data_final$ratio,4)
xh <- embed(data_final$value_log_diff_CPI,4)
mh <- lm(yh[,1] ~ yh[,2:4] + xh)
summary(mh)

#ANOVA
mh2 <- lm(yh[,1] ~ yh[,2:4])
anova(mh, mh2)
```

***Therefore, we cannot conclude that CPI does not granger cause ratio of actuals and projected revenue.***
